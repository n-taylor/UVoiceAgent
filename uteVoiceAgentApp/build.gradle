apply plugin: 'com.android.application'

android {

    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
    }

    useLibrary 'org.apache.http.legacy'
    compileSdkVersion Integer.parseInt(project.ANDROID_BUILD_SDK_VERSION)
    buildToolsVersion project.ANDROID_BUILD_TOOLS_VERSION

    defaultConfig {
        applicationId 'ute.webservice.voiceagent'
        minSdkVersion Integer.parseInt(project.ANDROID_BUILD_MIN_SDK_VERSION)
        //in gradle.properties
        targetSdkVersion Integer.parseInt(project.ANDROID_BUILD_TARGET_SDK_VERSION)
        versionCode Integer.parseInt(project.VERSION_CODE)
        versionName project.VERSION_NAME
        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
    }
    buildTypes {
        release {
            //proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    productFlavors {
    }
    buildToolsVersion '25.0.2'
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://maven.google.com" }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
}

dependencies {
    compile fileTree(include: '*.jar', dir: 'libs')

    compile 'com.android.support:appcompat-v7:25.3.1'

    //compile 'com.android.support:support-v4:25.3.+'
    //compile 'com.android.support:support-core-utils:25.4.0'//added 20170614
    compile 'com.google.code.gson:gson:2.3.1'
    compile 'commons-io:commons-io:2.4'
    compile 'ai.api:libai:1.2.2'
    //compile 'ai.api:sdk:2.0.1@aar'
    // this line left for testing purposes
    // compile project(':ailib')
    compile 'org.apache.httpcomponents:httpclient-android:4.3.5.1'
    compile 'com.android.support:design:25.3.1'
    compile 'ai.api:sdk:2.0.7@aar'

    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
}
//Jar creation
/*
task deleteJar(type: Delete) {
    delete 'libs/voiceagent.jar'
}

task createJar(type: Copy) {
    from('build/intermediates/bundles/release/')
    into('libs/jars/')
    include('classes.jar')
    rename('classes.jar', 'voiceagent.jar')
}

createJar.dependsOn(deleteJar, build)
*/
